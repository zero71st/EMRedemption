@model RedemptionListViewModel
@{
    ViewData["Title"] = "ProcessRewardList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.FilterName.Equals(RedemptionProcess.Processed))
{
    <h3>Code Process</h3>
}
else if (Model.FilterName.Equals(RedemptionProcess.DeliveredSuccessful))
{
    <h3>Change Status</h3>
}
else if (Model.FilterName.Equals(RedemptionProcess.UndeliverSuccessful))
{
    <h3>Resend Email</h3>
}

<hr />

<form class="form-inline">
    <div class="form-group">
        <input type="hidden" asp-for="FilterName" />
        <label class="sr-only">Search redemption info</label>
        <input asp-for="Keyword" type="text" class="form-control" placeholder="Search by redemption info.">
    </div>
    <button type="submit" class="btn btn-success"><span class="glyphicon glyphicon-search"></span></button>
</form>

<hr />
@if (Model.Redemptions.Count == 0)
{
    <p>
        <div class="alert alert-warning" role="alert">Not found redemptions!</div>
    </p>
}

else
{
    @if (Model.FilterName.Equals(RedemptionProcess.Processed))
    {
        <p>
            <a asp-action="SendEmail" class="btn btn-primary">
                <span class="glyphicon glyphicon-send" aria-hidden="true"></span>Send Email
            </a>
        </p>
    }

    @if (Model.FilterName.Equals(RedemptionProcess.UndeliverSuccessful))
    {
        <p>
            <a asp-action="ResendEmail" class="btn btn-warning">
                <span class="glyphicon glyphicon-send" aria-hidden="true"></span>Resend Email
            </a>
        </p>
    }

    <p>
        <small>Redemption(s): <span class="badge">@Model.Redemptions.Count</span></small>
    </p>

    <table class="table active">
        <thead>
            <tr>
                <th>
                    #
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Redemptions[0].TransactionID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Redemptions[0].RetailerName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Redemptions[0].RetailerStoreName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Redemptions[0].RetailerPhoneNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Redemptions[0].RetailerEmailAddress)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Redemptions[0].RedeemDateTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Redemptions[0].Status)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody class="table-hover">
            @foreach (var item in Model.Redemptions)
            {
            <tr class="success">
                <td>
                    @Html.DisplayFor(modelItem => item.LineNo)
                .</td>
                <td>
                    @Html.DisplayFor(modelItem => item.TransactionID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RetailerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RetailerStoreName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RetailerPhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RetailerEmailAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RedeemDateTime)
                </td>   

                <td>
                    @if (item.Status.Equals(RedemptionProcess.Unprocess))
                    {
                        <span class="label label-info"> @Html.DisplayFor(modelItem => item.Status)</span>
                    }
                    else if (item.Status.Equals(RedemptionProcess.Processed))
                    {
                        <span class="label label-warning"> @Html.DisplayFor(modelItem => item.Status)</span>
                    }
                    else if (item.Status.Equals(RedemptionProcess.UndeliverSuccessful))
                    {
                        <span class="label label-danger"> @Html.DisplayFor(modelItem => item.Status)</span>
                    }
                </td>

                @if (Model.FilterName.Equals(RedemptionProcess.DeliveredSuccessful))
                {
                    <td>
                        <p>
                            <a asp-action="ChangeStatus" asp-route-id="@item.Id" class="btn btn-primary btn-sm">
                                <span class="glyphicon glyphicon-check" aria-hidden="true"></span>Change as unsend-email
                            </a>
                        </p>
                    </td>
                }

            </tr>
                <tr></tr>
                <tr>
                    <td></td>
                    <td>#</td>
                    <td>Reward Code</td>
                    <td>Reward Name</td>
                    <td>Points</td>
                    <td>Quantity</td>
                    <td>Reward ref. ID</td>
                    <td></td>
                </tr>
                <tr>
                    @foreach (var redempItem in item.RedemptionItems)
                    {
                <tr class="table-condensed">
                    <td></td>
                    <td>
                        @Html.DisplayFor(modelItem => redempItem.LineNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => redempItem.RewardCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => redempItem.RewardName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => redempItem.Points)
                    </td>
                    <td>
                        <span class="badge">@Html.DisplayFor(modelItem => redempItem.Quantity)</span>
                    </td>
                    <td>
                        @foreach (var reward in redempItem.Rewards)
                        {
                            <span class="label label-info">@reward.Id</span>
                        }
                    </td>
                    <td></td>
                </tr>
                }
                    </tr>
                }
        </tbody>
    </table>
}
